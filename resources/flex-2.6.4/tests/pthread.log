set -euvx
+ set -euvx

# testwrapper.sh: run a flex test, typically called by a Makefile

# Each test will exercise some feature or aspect of flex. Run the test with any
# input it may need.

INPUT_DIRECTORY=""
+ INPUT_DIRECTORY=
INPUT_NAME=""
+ INPUT_NAME=
INPUT_COUNT=0
+ INPUT_COUNT=0
USE_REDIRECT=0
+ USE_REDIRECT=0
DO_COMPARISON=0
+ DO_COMPARISON=0

while getopts :d:i:rt1 OPTION ; do
    case $OPTION in
        d) INPUT_DIRECTORY=$OPTARG ;;
        i)
            if [ "$INPUT_NAME" = "" ] ; then
                INPUT_NAME="$OPTARG"
            else
                INPUT_NAME="$INPUT_NAME $OPTARG"
            fi
            INPUT_COUNT=$(($INPUT_COUNT+1))
            ;;
        r) USE_REDIRECT=1 ;;
        t) USE_TABLES=1 ;;
        1) DO_COMPARISON=1 ;;
    esac
done
+ getopts :d:i:rt1 OPTION
+ case $OPTION in
+ '[' '' = '' ']'
+ INPUT_NAME=./pthread_1.txt
+ INPUT_COUNT=1
+ getopts :d:i:rt1 OPTION
+ case $OPTION in
+ '[' ./pthread_1.txt = '' ']'
+ INPUT_NAME='./pthread_1.txt ./pthread_2.txt'
+ INPUT_COUNT=2
+ getopts :d:i:rt1 OPTION
+ case $OPTION in
+ '[' './pthread_1.txt ./pthread_2.txt' = '' ']'
+ INPUT_NAME='./pthread_1.txt ./pthread_2.txt ./pthread_3.txt'
+ INPUT_COUNT=3
+ getopts :d:i:rt1 OPTION
+ case $OPTION in
+ '[' './pthread_1.txt ./pthread_2.txt ./pthread_3.txt' = '' ']'
+ INPUT_NAME='./pthread_1.txt ./pthread_2.txt ./pthread_3.txt ./pthread_4.txt'
+ INPUT_COUNT=4
+ getopts :d:i:rt1 OPTION
+ case $OPTION in
+ '[' './pthread_1.txt ./pthread_2.txt ./pthread_3.txt ./pthread_4.txt' = '' ']'
+ INPUT_NAME='./pthread_1.txt ./pthread_2.txt ./pthread_3.txt ./pthread_4.txt ./pthread_5.txt'
+ INPUT_COUNT=5
+ getopts :d:i:rt1 OPTION

shift $(($OPTIND-1))
+ shift 10
TESTNAME=$1
+ TESTNAME=./pthread.pthread

INPUT_NAME=${INPUT_NAME:-$INPUT_DIRECTORY/`basename "${TESTNAME%.exe}"`.txt}
+ INPUT_NAME='./pthread_1.txt ./pthread_2.txt ./pthread_3.txt ./pthread_4.txt ./pthread_5.txt'

if [ $DO_COMPARISON = 1 ] ; then
    TEST_OUTPUT=`$TESTNAME < $INPUT_NAME`
    REF_OUTPUT=`$TESTNAME 1 < $INPUT_NAME`
    test "$TEST_OUTPUT" -eq "$REF_OUTPUT"
    exit $?
fi
+ '[' 0 = 1 ']'

if [ $INPUT_COUNT -gt 1 ] ; then
    $TESTNAME ${USE_TABLES:+${INPUT_DIRECTORY}/${TESTNAME%.exe}.tables} ${INPUT_NAME}
    exit $?
fi
+ '[' 5 -gt 1 ']'
+ ./pthread.pthread ./pthread_1.txt ./pthread_2.txt ./pthread_3.txt ./pthread_4.txt ./pthread_5.txt
Created thread 0.
Created thread 1.
Created thread 2.
Created thread 3.
Thread 0 done.
Thread 1 done.
Thread 2 done.
Thread 3 done.
TEST RETURNING OK.
+ exit 0
PASS pthread.pthread (exit status: 0)
